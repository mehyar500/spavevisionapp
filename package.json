{
  "name": "spacevision",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "workspaces": [
    "web",
    "worker",
    "shared",
    "scripts",
    "tests"
  ],
  "scripts": {
    "dev": "npm run build:shared && npm run build:shared && concurrently -n \"shared,worker,web\" -c \"cyan,yellow,green\" \"npm run dev -w shared\" \"sleep 2 && npm run dev -w worker\" \"sleep 1 && npm run dev -w web\"",
    "dev:web": "npm run dev -w web",
    "dev:worker": "npm run dev -w worker",
    "dev:shared": "npm run dev -w shared",
    "dev:full": "npm run build:shared && concurrently -n \"shared,worker,web,scripts,tests\" -c \"cyan,yellow,green,magenta,blue\" \"npm run dev -w shared\" \"npm run dev -w worker\" \"npm run dev -w web\" \"npm run dev -w scripts\" \"npm run dev -w tests\"",
    "build": "npm run build:shared && npm run build:worker && npm run build:web",
    "build:all": "npm run build --workspaces --if-present",
    "build:web": "npm run build -w web",
    "build:worker": "npm run build -w worker",
    "build:shared": "npm run build -w shared",
    "build:scripts": "npm run build -w scripts",
    "build:tests": "npm run build -w tests",
    "test": "npm run test --workspaces --if-present",
    "test:all": "npm run test --workspaces",
    "test:web": "npm run test -w web",
    "test:worker": "npm run test -w worker",
    "test:shared": "npm run test -w shared",
    "test:e2e": "npm run test -w tests",
    "lint": "npm run lint --workspaces --if-present",
    "lint:fix": "npm run lint:fix --workspaces --if-present",
    "lint:web": "npm run lint -w web",
    "lint:worker": "npm run lint -w worker",
    "lint:shared": "npm run lint -w shared",
    "lint:scripts": "npm run lint -w scripts",
    "lint:tests": "npm run lint -w tests",
    "type-check": "npm run type-check --workspaces --if-present",
    "type-check:all": "npm run type-check --workspaces",
    "clean": "npm run clean --workspaces --if-present && rimraf node_modules/.cache && rimraf dist",
    "clean:all": "npm run clean --workspaces && rimraf node_modules",
    "clean:web": "npm run clean -w web",
    "clean:worker": "npm run clean -w worker",
    "clean:shared": "npm run clean -w shared",
    "clean:scripts": "npm run clean -w scripts",
    "clean:tests": "npm run clean -w tests",
    "postinstall": "npm run build -w shared",
    "setup": "npm install && npm run build -w shared",
    "setup:dev": "npm run setup && npm run build:all",
    "deploy": "npx tsx scripts/spacevision-deploy.ts",
    "deploy:staging": "npx tsx scripts/spacevision-deploy.ts full staging --verbose",
    "deploy:production": "npx tsx scripts/spacevision-deploy.ts full production --verbose",
    "deploy:secrets": "npx tsx scripts/spacevision-deploy.ts secrets",
    "deploy:secrets:staging": "npx tsx scripts/spacevision-deploy.ts secrets staging",
    "deploy:secrets:production": "npx tsx scripts/spacevision-deploy.ts secrets production",
    "deploy:generate-secrets": "npx tsx scripts/spacevision-deploy.ts generate-secrets",
    "deploy:upload-secrets": "npx tsx scripts/spacevision-deploy.ts upload-secrets",
    "deploy:dev-secrets": "npx tsx scripts/spacevision-deploy.ts dev-secrets",
    "deploy:setup": "npx tsx scripts/spacevision-deploy.ts setup",
    "deploy:setup-kv": "npx tsx scripts/spacevision-deploy.ts setup-kv",
    "deploy:setup-r2": "npx tsx scripts/spacevision-deploy.ts setup-r2",
    "deploy:setup-d1": "npx tsx scripts/spacevision-deploy.ts setup-d1",
    "deploy:setup-infrastructure": "npx tsx scripts/spacevision-deploy.ts setup-infrastructure",
    "deploy:status": "npx tsx scripts/spacevision-deploy.ts status",
    "deploy:status:staging": "npx tsx scripts/spacevision-deploy.ts status staging",
    "deploy:status:production": "npx tsx scripts/spacevision-deploy.ts status production",
    "deploy:validate": "npx tsx scripts/spacevision-deploy.ts validate",
    "deploy:validate:staging": "npx tsx scripts/spacevision-deploy.ts validate staging",
    "deploy:validate:production": "npx tsx scripts/spacevision-deploy.ts validate production",
    "deploy:cleanup": "npx tsx scripts/spacevision-deploy.ts cleanup",
    "deploy:build": "npx tsx scripts/spacevision-deploy.ts build",
    "deploy:deploy-worker": "npx tsx scripts/spacevision-deploy.ts deploy-worker",
    "deploy:deploy-pages": "npx tsx scripts/spacevision-deploy.ts deploy-pages",
    "deploy:list-workers": "npx tsx scripts/spacevision-deploy.ts list-workers",
    "deploy:list-pages": "npx tsx scripts/spacevision-deploy.ts list-pages",
    "deploy:list-secrets": "npx tsx scripts/spacevision-deploy.ts list-secrets",
    "deploy:list-kv": "npx tsx scripts/spacevision-deploy.ts list-kv",
    "deploy:list-r2": "npx tsx scripts/spacevision-deploy.ts list-r2",
    "deploy:list-d1": "npx tsx scripts/spacevision-deploy.ts list-d1",
    "deploy:whoami": "npx tsx scripts/spacevision-deploy.ts whoami",
    "deploy:tail": "npx tsx scripts/spacevision-deploy.ts tail",
    "deploy:tail:staging": "npx tsx scripts/spacevision-deploy.ts tail staging",
    "deploy:tail:production": "npx tsx scripts/spacevision-deploy.ts tail production",
    "deploy:help": "npx tsx scripts/spacevision-deploy.ts --help",
    "deploy:dry-run": "npx tsx scripts/spacevision-deploy.ts full production --dry-run --verbose",
    "deploy:dry-run:staging": "npx tsx scripts/spacevision-deploy.ts full staging --dry-run --verbose",
    "validate-deployment": "npm run validate-deployment -w scripts",
    "validate:staging": "npm run validate-staging -w scripts",
    "validate:production": "npm run validate-production -w scripts",
    "migration:run": "npm run migrate-db -w scripts",
    "migration:rollback": "npm run migrate-db -w scripts -- --rollback",
    "config:validate": "node scripts/validate-config.js",
    "config:setup-r2": "node scripts/cloudflare/setup-r2-storage.js",
    "config:docs": "echo 'See docs/CONFIGURATION.md for configuration guidance'",
    "security:test": "npx tsx scripts/spacevision-deploy.ts validate",
    "db:setup": "npx tsx scripts/spacevision-deploy.ts setup-d1",
    "db:validate": "npx tsx scripts/spacevision-deploy.ts list-d1",
    "db:migrate": "npm run db:migrate -w worker",
    "db:seed": "npm run db:seed -w worker",
    "kv:setup": "npx tsx scripts/spacevision-deploy.ts setup-kv",
    "kv:validate": "npx tsx scripts/spacevision-deploy.ts list-kv",
    "r2:setup": "npx tsx scripts/spacevision-deploy.ts setup-r2",
    "r2:validate": "npx tsx scripts/spacevision-deploy.ts list-r2",
    "cf": "npx tsx CloudFlareManager.ts",
    "cf:status": "npx tsx CloudFlareManager.ts status",
    "cf:help": "npx tsx CloudFlareManager.ts help",
    "deploy:local": "npm run deploy:dev-secrets && npm run build:shared && npm run dev",
    "deploy:local:setup": "npx tsx scripts/spacevision-deploy.ts dev-secrets && npm run setup:dev",
    "deploy:local:reset": "npm run clean && npm run deploy:local:setup"
  },
  "devDependencies": {
    "@eslint/js": "^9.27.0",
    "@types/node": "^22.15.21",
    "@typescript-eslint/eslint-plugin": "^8.32.1",
    "@typescript-eslint/parser": "^8.32.1",
    "concurrently": "^9.1.2",
    "eslint": "^9.27.0",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "prettier": "^3.5.3",
    "rimraf": "^6.0.1"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "packageManager": "npm@10.2.4",
  "author": "spacevision Team",
  "license": "MIT",
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "prettier --write"
    ],
    "*.{json,md,css,html,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "dotenv": "^16.5.0"
  }
}
